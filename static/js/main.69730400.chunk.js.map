{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Controls/Controls.module.css","components/Notification/Notification.module.css","components/Controls/Controls.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Controls","statNames","onBtnFeedback","className","s","title","buttonList","map","name","button","onClick","Statistics","good","neutral","bad","total","percentage","statInfo","defaultProps","Notification","message","text","App","useState","setGood","setNeutral","setBad","countTotalFeedback","key","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,+B,gBCA/DD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,6BAA6B,OAAS,2B,mBCArGD,EAAOC,QAAU,CAAC,KAAO,6B,+JCGV,SAASC,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,cAC5C,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAWC,IAAEC,MAAjB,mCACA,qBAAKF,UAAWC,IAAEE,WAAlB,SACGL,EAAUM,KAAI,SAAAC,GAAI,OACjB,wBAAQL,UAAWC,IAAEK,OAAmBC,QAAS,kBAAMR,EAAcM,IAArE,SACGA,GAD+BA,W,oBCN7B,SAASG,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC9D,OACE,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAWC,IAAEC,MAAjB,yBACA,oBAAGF,UAAWC,IAAEa,SAAhB,mBAAiCL,KACjC,oBAAGT,UAAWC,IAAEa,SAAhB,sBAAoCJ,KACpC,oBAAGV,UAAWC,IAAEa,SAAhB,kBAAgCH,KAChC,oBAAGX,UAAWC,IAAEa,SAAhB,oBAAkCF,KAClC,oBAAGZ,UAAWC,IAAEa,SAAhB,gCAA8CD,EAA9C,UAKNL,EAAWO,aAAe,CACxBF,WAAY,G,oBCdC,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,qBAAKjB,UAAU,YAAf,SACE,mBAAGA,UAAWC,IAAEiB,KAAhB,SAAuBD,MCDd,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAsBMC,EAAqB,WAEzB,OADcf,EAAOC,EAAUC,GAUjC,OACE,sBAAKX,UAAU,MAAf,UACE,cAACH,EAAD,CAAUC,UAlCM,CAAC,OAAQ,UAAW,OAkCFC,cAhClB,SAAA0B,GAClB,OAAQA,GACN,IAAK,OACHJ,EAAQZ,EAAO,GACf,MAEF,IAAK,UACHa,EAAWZ,EAAU,GACrB,MAEF,IAAK,MACHa,EAAOZ,EAAM,GACb,MAEF,QACE,WAkBDa,IAAuB,EACtB,cAAChB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,WAfgC,WACtC,GAAIJ,EAAO,EACT,OAAOiB,KAAKC,MAAOlB,EAAOe,IAAwB,KAalCI,KAGd,cAACZ,EAAD,CAAcC,QAAQ,yBCjD9BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69730400.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__6AWdb\",\"statInfo\":\"Statistics_statInfo__25D8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Controls_title__OPD2w\",\"buttonList\":\"Controls_buttonList__3vkfh\",\"button\":\"Controls_button__1irMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1df40\"};","// import { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from './Controls.module.css';\r\n\r\nexport default function Controls({ statNames, onBtnFeedback }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className={s.title}>Please leave feedback</h1>\r\n      <div className={s.buttonList}>\r\n        {statNames.map(name => (\r\n          <button className={s.button} key={name} onClick={() => onBtnFeedback(name)}>\r\n            {name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({ good, neutral, bad, total, percentage }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className={s.title}>Statisctics</h2>\r\n      <p className={s.statInfo}>Good: {good}</p>\r\n      <p className={s.statInfo}>Neutral: {neutral}</p>\r\n      <p className={s.statInfo}>Bad: {bad}</p>\r\n      <p className={s.statInfo}>Total: {total}</p>\r\n      <p className={s.statInfo}>Positive Feedback: {percentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  percentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percentage: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <p className={s.text}>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import './App.css';\nimport { useState } from 'react';\nimport Controls from './components/Controls';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const buttonNames = ['good', 'neutral', 'bad'];\n\n  const addFeedback = key => {\n    switch (key) {\n      case 'good':\n        setGood(good + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n\n      case 'bad':\n        setBad(bad + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    if (good > 0) {\n      return Math.round((good / countTotalFeedback()) * 100);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Controls statNames={buttonNames} onBtnFeedback={addFeedback} />\n      {countTotalFeedback() > 0 ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          percentage={countPositiveFeedbackPercentage()}\n        />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}